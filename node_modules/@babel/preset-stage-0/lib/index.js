"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _helperPluginUtils() {
  var data = require("@babel/helper-plugin-utils");

  _helperPluginUtils = function _helperPluginUtils() {
    return data;
  };

  return data;
}

function _presetStage() {
  var data = _interopRequireDefault(require("@babel/preset-stage-1"));

  _presetStage = function _presetStage() {
    return data;
  };

  return data;
}

function _pluginProposalFunctionBind() {
  var data = _interopRequireDefault(require("@babel/plugin-proposal-function-bind"));

  _pluginProposalFunctionBind = function _pluginProposalFunctionBind() {
    return data;
  };

  return data;
}

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _helperPluginUtils().declare)(function (api, opts) {
  if (opts === void 0) {
    opts = {};
  }

  api.assertVersion(7);
  var _opts = opts,
      _opts$loose = _opts.loose,
      loose = _opts$loose === void 0 ? false : _opts$loose,
      _opts$useBuiltIns = _opts.useBuiltIns,
      useBuiltIns = _opts$useBuiltIns === void 0 ? false : _opts$useBuiltIns,
      _opts$decoratorsLegac = _opts.decoratorsLegacy,
      decoratorsLegacy = _opts$decoratorsLegac === void 0 ? false : _opts$decoratorsLegac;

  if (typeof loose !== "boolean") {
    throw new Error("@babel/preset-stage-0 'loose' option must be a boolean.");
  }

  if (typeof useBuiltIns !== "boolean") {
    throw new Error("@babel/preset-stage-0 'useBuiltIns' option must be a boolean.");
  }

  if (typeof decoratorsLegacy !== "boolean") {
    throw new Error("@babel/preset-stage-0 'decoratorsLegacy' option must be a boolean.");
  }

  if (decoratorsLegacy !== true) {
    throw new Error("The new decorators proposal is not supported yet." + ' You must pass the `"decoratorsLegacy": true` option to' + " @babel/preset-stage-0");
  }

  return {
    presets: [[_presetStage().default, {
      loose: loose,
      useBuiltIns: useBuiltIns,
      decoratorsLegacy: decoratorsLegacy
    }]],
    plugins: [_pluginProposalFunctionBind().default]
  };
});

exports.default = _default;